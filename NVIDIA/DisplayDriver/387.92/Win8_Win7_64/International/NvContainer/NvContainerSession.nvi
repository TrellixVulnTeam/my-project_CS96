<?xml version="1.0" encoding="utf-8"?>
<nvi name="${{PackageId}}" title="${{title}}" version="${{version}}" versionText="${{version}}" timestamp="${{timestamp}}" disposition="demand" hidden="true" installerMin="2.1002.234.2014">
	<strings>
		<string name="title" value="NVIDIA Session Container"/>
		<string name="version" value="1.6"/>
		<string name="timestamp" value="2017-08-11T08:58:41"/>
		<string name="PackageId" value="NvContainer.Session"/>
		<string name="InstallFolderName" value="${{NvidiaProgramFiles}}\NvContainer"/>
		<string name="InstallFolderNameX86" value="${{NvidiaProgramFilesX86}}\NvContainer"/>
		<string name="ContainerBinaryNameBase" value="NvContainer"/>
		<string name="ContainerBinaryName" value="nvcontainer.exe"/>
		<string name="LogBaseFilePath" value="${{NvidiaCommonAppData}}\NvContainerSession"/>
		<string name="RequiredPackage1" value="NvContainer"/>
		<string name="RequiredPackage2" value="NvPlugin.Watchdog"/>
		<string name="NviName" value="NvContainerSession.nvi"/>
	</strings>
	<strings>
		<string name="PluginFolderName" value="${{InstallFolderName}}\plugins\Session"/>
		<string name="PluginFolderNameX86" value="${{InstallFolderNameX86}}\plugins\Session"/>
		<string name="LogLevel" value="3"/>
		<string name="WatchdogRegistryKey" value="${{NvidiaSoftwareKey}}\${{ContainerBinaryNameBase}}\Watchdog"/>
		<string name="LogFileWaitForUnlockPeriod" value="5000"/>
		<string name="ContainerPath" value="${{InstallFolderName}}\${{ContainerBinaryName}}"/>
		<string name="ContainerPathX86" value="${{InstallFolderNameX86}}\${{ContainerBinaryName}}"/>
		<string name="RestartPolicy" value="10/300/5"/>
		<string name="StateTransitionMaxTime" value="30000"/>
	</strings>
	<filter name="64bit" platform="amd64"/>
	<dependencies>
		<package type="requires" package="${{RequiredPackage1}}"/>
		<package type="requires" package="${{RequiredPackage2}}"/>
		<package type="requires" package="NvContainer.ContainerTelemetryApiHelper" when="always"/></dependencies>
	<manifest>
		<file name="${{NviName}}"/>
	</manifest>
	<phases>
		<standard phase="deleteDeperecatedUserElevated" onError="ignore" when="install">
			<deleteDirectoryTree target="${{InstallFolderName}}\plugins\UserElevated"/>
			<deleteDirectoryTree target="${{InstallFolderNameX86}}\plugins\UserElevated"/>
			<deleteRegistryKeyTree keyName="${{WatchdogRegistryKey}}\UserElevatedX86"/>
			<deleteRegistryKeyTree keyName="${{WatchdogRegistryKey}}\UserElevatedX64"/>
		</standard>
		<standard phase="createDirectories">
			<createDirectory target="${{PluginFolderName}}"/>
		</standard>
		<standard phase="deleteInstalledFiles" onError="ignore" when="uninstall">
			<deleteDirectoryTree target="${{PluginFolderName}}"/>
		</standard>
		<standard phase="createLogFolder" onError="ignore" when="install">
			<createDirectory target="${{NvidiaCommonAppData}}"/>
		</standard>
		<standard phase="deleteAppData" onError="ignore" when="uninstall">
			<deleteFile target="${{LogBaseFilePath}}*.log*" waitForUnlock="${{LogFileWaitForUnlockPeriod}}"/>
		</standard>
		<standard phase="createRegkeyX86">
			<addRegistry keyName="${{WatchdogRegistryKey}}\SessionX86" valueName="" value="Session Plugins (x86)" type="REG_SZ"/>
			<addRegistry keyName="${{WatchdogRegistryKey}}\SessionX86" valueName="Folder" value="${{PluginFolderNameX86}}" type="REG_SZ"/>
			<addRegistry keyName="${{WatchdogRegistryKey}}\SessionX86" valueName="Container" value="${{ContainerPathX86}}" type="REG_SZ"/>
			<addRegistry keyName="${{WatchdogRegistryKey}}\SessionX86" valueName="Parameters" value="-f &quot;${{LogBaseFilePath}}%d.log&quot; -d &quot;${{PluginFolderNameX86}}&quot; -r -l ${{LogLevel}} -p ${{StateTransitionMaxTime}}" type="REG_SZ"/>
			<addRegistry keyName="${{WatchdogRegistryKey}}\SessionX86" valueName="RunElevated" value="1" type="REG_DWORD"/>
			<addRegistry keyName="${{WatchdogRegistryKey}}\SessionX86" valueName="Policy" value="${{RestartPolicy}}" type="REG_SZ"/>
			<addRegistry keyName="${{WatchdogRegistryKey}}\SessionX86" valueName="GenerateDump" value="0" type="REG_DWORD"/>
		</standard>
		<if filter="64bit">
			<standard phase="createRegkeyAMD64">
				<addRegistry keyName="${{WatchdogRegistryKey}}\SessionX64" valueName="" value="Session Plugins (x64)" type="REG_SZ"/>
				<addRegistry keyName="${{WatchdogRegistryKey}}\SessionX64" valueName="Folder" value="${{PluginFolderName}}" type="REG_SZ"/>
				<addRegistry keyName="${{WatchdogRegistryKey}}\SessionX64" valueName="Container" value="${{ContainerPath}}" type="REG_SZ"/>
				<addRegistry keyName="${{WatchdogRegistryKey}}\SessionX64" valueName="Parameters" value="-f &quot;${{LogBaseFilePath}}%d.log&quot; -d &quot;${{PluginFolderName}}&quot; -r -l ${{LogLevel}} -p ${{StateTransitionMaxTime}}" type="REG_SZ"/>
				<addRegistry keyName="${{WatchdogRegistryKey}}\SessionX64" valueName="RunElevated" value="1" type="REG_DWORD"/>
				<addRegistry keyName="${{WatchdogRegistryKey}}\SessionX64" valueName="Policy" value="${{RestartPolicy}}" type="REG_SZ"/>
				<addRegistry keyName="${{WatchdogRegistryKey}}\SessionX64" valueName="GenerateDump" value="0" type="REG_DWORD"/>
			</standard>
		</if>
	</phases>
</nvi>
